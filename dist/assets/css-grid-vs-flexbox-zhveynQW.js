const g="data:text/markdown;base64,IyDwn6egIFJlYWwtVGltZSBSZXBvcnRpbmcgZm9yIFlvdXIgKEFsbW9zdCkgQWxsLUxpZmUgUHVycG9zZXMKCk9uZSBvZiBteSBncmVhdGVzdCBwbGVhc3VyZXMsIGRlYXIgcmVhZGVycywgaXMgKipidWlsZGluZyB0aGluZ3MqKiDigJQgaW4gYW55IHNoYXBlIG9yIGZvcm0uIPCfm6DvuI8gIApJIGRvbuKAmXQga25vdyB3aHksIGJ1dCBzaW5jZSBJIHdhcyBhIGtpZCwgSSBsb3ZlZCBjcmVhdGluZyB0b29scyBhbmQgb2JqZWN0cyBqdXN0IGZvciBmdW4uIFlvdSBjb3VsZCBzYXkgSSB3YXMgYSDigJxtYWtlcuKAnSBsb25nIGJlZm9yZSBJIGV2ZW4ga25ldyB3aGF0IHRoYXQgbWVhbnQuCgpGYXN0LWZvcndhcmQgYSBmZXcgeWVhcnMgaW50byBteSB0ZWNoIGNhcmVlciwgYW5kIEkgc3R1bWJsZWQgdXBvbiBhbiB1bmV4cGVjdGVkICoqaW52ZXN0bWVudCBvcHBvcnR1bml0eSoqIOKAlCBhIG5lYXJseSB3cmVja2VkIG9sZCBob3VzZSBpbiBteSBob21ldG93bi4g8J+Pmu+4jyAgCkl0IG5lZWRlZCAqZXZlcnl0aGluZyo6IGZsb29ycywgd2FsbHMsIHBpcGVzLCBlbGVjdHJpY2l0eSwga2l0Y2hlbiwgd2luZG93cywgZG9vcnPigKYgZXZlbiBhIG5ldyBzb3VsIChhbmQgYSBmZXcgY29hdHMgb2YgcGFpbnQpLiDwn46oICAKCkJ1dCB0aGF04oCZcyBub3Qgd2hhdCB0aGlzIHN0b3J5IGlzIGFib3V0LgoKLS0tCgojIyDwn4+hIEZyb20gUmVub3ZhdGlvbiB0byBSZXBvcnRpbmcKCkFmdGVyIG1vbnRocyBvZiByZW5vdmF0aW9uLCBJIGZpbmFsbHkgcmVudGVkIG91dCB0aGUgYXBhcnRtZW50LiBUaGUgdGVuYW50IHBsYW5uZWQgdG8gc3RheSBvbmx5IGZvciBhIGZldyBtb250aHMsIHNvIGl0IGRpZG7igJl0IG1ha2Ugc2Vuc2UgdG8gdHJhbnNmZXIgYWxsIHRoZSB1dGlsaXR5IGFjY291bnRzIHRvIGhpcyBuYW1lLiAgCkluc3RlYWQsIGhl4oCZZCBwYXkgbWUgYSBmaXhlZCBmZWUgZXZlcnkgbW9udGgsIGFuZCBldmVyeSBxdWFydGVyIHdl4oCZZCBjYWxjdWxhdGUgdGhlIHJlYWwgdXNhZ2UgYmFzZWQgb24gYWN0dWFsIGNvbnN1bXB0aW9uLgoKU2ltcGxlLCByaWdodD8gRXhjZXB0IGZvciBvbmUgcHJvYmxlbTogIApJIGRpZG7igJl0IHdhbnQgdG8gbWFudWFsbHkgY2hlY2sgaW52b2ljZXMgZXZlcnkgbW9udGggYW5kIHNlbmQgYW4gZW1haWwgc2F5aW5nLCDigJxIZXksIHlvdSBvd2UgdGhpcyBtdWNo4oCm4oCdIPCfmKkgIAoKSSB3YW50ZWQgKipsaXZlIHJlcG9ydGluZyoqIOKAlCBhIHNpbXBsZSwgYXV0b21hdGVkIHdheSB0byB2aXN1YWxpemUgdG90YWwgdXRpbGl0eSBjb3N0cyBpbiByZWFsIHRpbWUuICAKClNvIEkgY2FtZSB1cCB3aXRoIGEgbmVhdCBpZGVhIPCfkqE6ICAKV2h5IG5vdCB1c2UgKipHcmFmYW5hKiosIG9uZSBvZiBteSBmYXZvcml0ZSB0b29scywgYW5kIGNvbm5lY3QgaXQgdG8gYSAqKkdvb2dsZSBTaGVldCoqPyBUaGF0IHdheSwgdGhlIHRlbmFudCBjb3VsZCBzZWUgdXAtdG8tZGF0ZSBleHBlbnNlcywgbW9udGhseSBhdmVyYWdlcywgYW5kIHVzYWdlIHRyZW5kcyBkaXJlY3RseSBvbiBhIGRhc2hib2FyZCDigJQgbm8gZW1haWxzLCBubyBtYXRoIQoKLS0tCgojIyDimpnvuI8gU2V0dGluZyBJdCBVcDogR3JhZmFuYSArIEdvb2dsZSBTaGVldHMKClRoZSBzZWNyZXQgaW5ncmVkaWVudCBoZXJlIGlzIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIEdyYWZhbmEgcGx1Z2lucyDigJQgdGhlICoqR29vZ2xlIFNoZWV0cyBEYXRhIFNvdXJjZSBQbHVnaW4qKi4gIApIZXJl4oCZcyBob3cgdG8gZ2V0IGl0IHJ1bm5pbmcgKHNwb2lsZXI6IGl04oCZcyBzdXBlciBlYXN5IPCfmoApOgoKMS4gKipDcmVhdGUgb3IgbG9nIGluKiogdG8geW91ciBbR3JhZmFuYSBDbG91ZCBzdGFja10oaHR0cHM6Ly9ncmFmYW5hLmNvbS9wcm9kdWN0cy9jbG91ZC8pLiBJdOKAmXMgZnJlZSBhbmQgZ2VuZXJvdXMgZm9yIHBlcnNvbmFsIHByb2plY3RzLiAgCjIuIEluIEdyYWZhbmEsIGdvIHRvICoqQ29ubmVjdGlvbnMg4oaSIEdvb2dsZSBTaGVldHMg4oaSIEluc3RhbGwgUGx1Z2luIOKGkiBBZGQgRGF0YSBTb3VyY2UqKi4gIAozLiBJbiB0aGUgY29uZmlndXJhdGlvbiBwYWdlLCBjbGljayAqKkdlbmVyYXRlIGFuIEFQSSBrZXkqKiDigJQgdGhlIHNpbXBsZXN0IHdheSB0byBjb25uZWN0IEdyYWZhbmEgd2l0aCBHb29nbGUgU2hlZXRzLiAgCjQuIEFsdGVybmF0aXZlbHksIGNyZWF0ZSB0aGUga2V5IG1hbnVhbGx5OiAgCiAgIC0gR28gdG8gdGhlIFtHb29nbGUgQ2xvdWQgQ29uc29sZV0oaHR0cHM6Ly9jb25zb2xlLmNsb3VkLmdvb2dsZS5jb20vKSAgCiAgIC0gTmF2aWdhdGUgdG8gKipBUEkgTGlicmFyeSDihpIgR29vZ2xlIFNoZWV0cyBBUEkg4oaSIENyZWRlbnRpYWxzIOKGkiBDcmVhdGUgQ3JlZGVudGlhbHMg4oaSIEFQSSBLZXkqKiAgCiAgIC0gQ29weSB0aGF0IGtleSBhbmQgcGFzdGUgaXQgaW50byB5b3VyIEdyYWZhbmEgZGF0YSBzb3VyY2UgY29uZmlndXJhdGlvbi4gIAo1LiBOb3csIGdyYWIgdGhlIFVSTCBvZiB5b3VyIEdvb2dsZSBTaGVldCwgZm9yIGV4YW1wbGU6ICAKaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMU5CcUloRy1OYWx5Q0lheFNIUkVLLUpNM2NESVpzMURNQngxLXAzNkpnL2VkaXQ/Z2lkPTAjZ2lkPTAKWW914oCZbGwgb25seSBuZWVkIHRoZSAqKlNwcmVhZHNoZWV0IElEKiog4oCUIHRoZSBwYXJ0IGJldHdlZW4gYC9kL2AgYW5kIGAvZWRpdGAuICAKNi4gQmFjayBpbiBHcmFmYW5hLCBzZWxlY3QgdGhlIEdvb2dsZSBTaGVldHMgZGF0YSBzb3VyY2UgeW91IGp1c3QgY3JlYXRlZCwgdGhlbiBlbnRlcjogIAotIFRoZSAqKlNwcmVhZHNoZWV0IElEKiogIAotIFRoZSAqKlJhbmdlKiogeW91IHdhbnQgdG8gcXVlcnkgKGZvciBleGFtcGxlLCBgJ1NoZWV0MSchQTI6STdgKSAgCjcuIFdhaXQgYSBmZXcgbWludXRlcyDij7Mg4oCUIGl0IG1pZ2h0IHRha2UgYSBzaG9ydCB3aGlsZSBiZWZvcmUgdGhlIGZpcnN0IGRhdGEgYXBwZWFycy4gIAo4LiBPbmNlIGNvbm5lY3RlZCwgeW91IGNhbiBjcmVhdGUgKip0YWJsZXMqKiwgKipnYXVnZXMqKiwgb3IgKipiYXIgY2hhcnRzKiog4oCUIHdoYXRldmVyIGhlbHBzIHZpc3VhbGl6ZSB5b3VyIGRhdGEgYmVzdC4KCkhlcmXigJlzIGFuIGV4YW1wbGUgb2YgaG93IGl0IGxvb2tzIGluIEdyYWZhbmEg8J+RhyAgCiFbR3JhZmFuYSBFeGFtcGxlXShodHRwczovL2kuaW1ndXIuY29tL2w2UEFJMmIucG5nKQoKLS0tCgojIyDwn4yNIFNoYXJpbmcgdGhlIERhc2hib2FyZAoKTm93LCBoZXJlIGNvbWVzIHRoZSBmdW4gcGFydCDigJQgeW91IGNhbiAqKnB1Ymxpc2ggeW91ciBkYXNoYm9hcmQqKiBhbmQgbWFrZSBpdCBwdWJsaWNseSBhY2Nlc3NpYmxlLCBzbyB5b3VyIHRlbmFudCAob3IgYW55b25lIGVsc2UpIGNhbiB2aWV3IGl0IGluIHJlYWwgdGltZS4gIApObyBtb3JlIGNoYXNpbmcgaW52b2ljZXMgb3IgZG9pbmcgbGF0ZS1uaWdodCBtYXRoIPCfp64uCgpUaGlzIHNldHVwIHdvcmtlZCBiZWF1dGlmdWxseSBmb3IgYm90aCBvZiB1czogIAotIEkgY291bGQgZWFzaWx5IHVwZGF0ZSB0aGUgbW9udGhseSBpbnZvaWNlIGFtb3VudHMuICAKLSBUaGUgdGVuYW50IGNvdWxkIGluc3RhbnRseSBzZWUgd2hhdCB0aGV5IHdlcmUgc3BlbmRpbmcuICAKClByZXR0eSBjb29sLCByaWdodD8g8J+YjiAgCgpXZWxs4oCmIGFsbW9zdC4gIApJdCBzdGlsbCByZXF1aXJlZCBtZSB0byBtYW51YWxseSB1cGRhdGUgdGhlIG51bWJlcnMgZXZlcnkgbW9udGgsIHdoaWNoIHdhc27igJl0IHRoZSBwZXJmZWN0IGF1dG9tYXRpb24gSSBoYWQgaW4gbWluZC4gIAoKV291bGRu4oCZdCBpdCBiZSBhbWF6aW5nIHRvIGZ1bGx5IGF1dG9tYXRlIHRoaXMgcHJvY2Vzcz8g8J+kliAgCgpTdGF5IHR1bmVkIGZvciAqKlBhcnQgMioqLCB3aGVyZSBJ4oCZbGwgc2hvdyB5b3UgZXhhY3RseSBob3cgSSB0b29rIHRoaXMgcmVhbC10aW1lIHJlcG9ydGluZyB0byB0aGUgbmV4dCBsZXZlbCEK";export{g as default};
